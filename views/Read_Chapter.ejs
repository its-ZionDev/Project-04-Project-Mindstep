<%- include('partials/header')%>

<section class="main">
  <div class="book-subinfo-container">
    <div class="book-subinfo-card">
      <div class="book-subinfo-description">
        <img src="/assets/images/Mindstep Cover.png" alt="Project Mindstep Book 1" class="book-sub-img">
        <div class="book-subinfo">
          <h2 class="book-subtitle">Project Mindstep : Book 1</h2>
          <span class="book-author">Author Steele</span>
          <span class="book-updates">Posted on <%= new Date(time).toLocaleDateString('en-US', { month: 'short', day: '2-digit', year: 'numeric' })  %></span>
          <div class="book-genre-tags">
            <span>Mystery</span>
            <span>Suspense</span>
            <span>Thriller</span>
            <span>Action</span>
            <span>Pyschological</span>
          </div>
        </div>
      </div>
      <div class="book-subinfo-end"></div>
      <div class="book-chapter-info">
        <h3 class="book-subtitle-2"> Chapter-<%= chapter_no %>: <%= title %></h3>
        <p>
          <%= synopsis %>
        </p>
      </div>
    </div>
  </div>
  <div class="book-chapter-container">
    <div class="book-chapter-card">
      <h1 class="book-title"><%= chapter.chapter_title %></h1>
      <% chapter.content.forEach(function(section) { %>
      <% if (section.type === 'text') { %>
      <p>
        <%- section.content %>
      </p>
      <% } else if (section.type === 'image') { %>
      <img src="<%= section.content %>" alt="Chapter Image" class="chapter-image">
      <% } %>
      <% }); %>
      <div class="book-chapter-navigation-container">
        <% if (prevChapterNo) { %>
        <a href="/Read_Chapter?chapter_no=<%= prevChapterNo %>" class="nav-button"><i class="ri-arrow-left-s-line"></i>Prev</a>
        <% } %>
        <a href="/Book1_Novel_Chapters" class="nav-button">Index</a>
        <% if (nextChapterNo) { %>
        <a href="/Read_Chapter?chapter_no=<%= nextChapterNo %>" class="nav-button">Next<i class="ri-arrow-right-s-line"></i></a>
        <% } %>
      </div>
      <div class="book-comments-container">
        <h2 class="book-subtitle">Share your thoughts with the fellow Menders</h2>
        <form id="comment-form">
          <div class="comment-group">
            <input type="text" id="name" name="name" placeholder="Your Name" maxlength="20" required>
          </div>
          <div class="comment-group">
            <textarea id="content" name="content" placeholder="Leave a comment with us..." required></textarea>
          </div>
          <button type="submit" class="comment-btn">Comment</button>
        </form>
      </div>
    </div>
  </div>
  <div id="comments-container" class="comments-container hidden">
    <% if (comments && comments.length > 0) { %>
    <% comments.forEach(comment => { %>
    <%- include('partials/comment', { comment }) %>
    <% }) %>
    <% } else { %>
    <p class="no-comments">No comments yet. Be the first to share your thoughts!</p>
    <% } %>
  </div>

  <div class="load-comments-btn-container">
    <button id="load-comments-btn" class="load-comments-btn">Load Comments</button>
  </div>
</section>
<%- include('partials/footer')%>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const commentForm = document.getElementById('comment-form');

    commentForm.addEventListener('submit', async (event) => {
      event.preventDefault();

      const name = document.getElementById('name').value;
      const content = document.getElementById('content').value;

      const chapterNo = '<%= chapter_no %>';

      if (!name || !content) {
        alert('Please fill out all fields');
        return;
      }

      const commentData = {
        name,
        content,
        chapter_no: chapterNo,
      };

      try {
        const response = await fetch('/read_chapter/comment', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(commentData),
        });

        const data = await response.json();

        if (data.success) {
          commentForm.reset();
          updateComments(data.comment);
        } else {
          alert(data.message || 'Error posting comment');
        }
      } catch (error) {
        console.error('Error posting comment:', error);
        alert('An error occurred while posting your comment.');
      }
    });
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const chapterNo = '<%= chapter_no %>';

    document.querySelectorAll('.reply-form').forEach((form) => {
      form.addEventListener('submit', async (event) => {
        event.preventDefault();

        const parentId = form
          .closest('.reply-form-container')
          .id.replace('reply-form-', '');
        const formData = new FormData(form);
        formData.append('parent_id', parentId);
        formData.append('chapter_no', chapterNo);
        try {
          const response = await fetch('/read_chapter/reply', {
            method: 'POST',
            body: new URLSearchParams(formData),
          });

          const data = await response.json();

          if (data.success) {
            form.classList.add('hidden');

            const newReply = `
                            <div class="reply">
                              <div class="reply-container">
                                <div class="reply-header">
                                  <span class="reply-author">${data.reply.name}</span>
                                  <span class="reply-time">${new Date(
                                    data.reply.created_at,
                                    ).toLocaleDateString('en-US', {
                                    month: 'short',
                                    day: '2-digit',
                                    year: 'numeric',
                                    })}</span>
                                </div>
                                <div class="reply-content">
                                  <p>${data.reply.content}</p>
                                </div>
                                <div class="reply-actions">
                                  <div class="like-btn-container ${data.reply.userHasLiked ? 'liked' : ''}" data-reply-id="${data.reply.id}">
                                    <span class="like-btn"><i class="ri-thumb-up-fill"></i></span>
                                    <span class="like-count">${
                                      data.reply.likes !== undefined ? data.reply.likes : 0
                                      }</span>
                                  </div>
                                </div>
                              </div>
                            </div>
                            `;
            const parentComment = document.getElementById(`comment-${parentId}`);
            const repliesContainer =
              parentComment.querySelector('.replies') ||
              document.createElement('div');
            repliesContainer.classList.add('replies');
            repliesContainer.innerHTML += newReply;

            form.reset();
          } else {
            alert(data.message || 'Error posting reply.');
          }
        } catch (error) {
          console.error('Error submitting reply:', error);
          alert('Something went wrong. Please try again later.');
        }
      });
    });
  });
</script>
<script src="/js/read_chapter.js"></script>
</body>
</html>